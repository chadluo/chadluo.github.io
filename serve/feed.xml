<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>nagare</title>
		<description>にげて</description>		
		<link>http://yukir.net</link>
		<atom:link href="http://yukir.net/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>圖相關算法筆記</title>
				<description>&lt;p&gt;圖由節點與邊組成。一個節點連接若干條邊，一條邊連接兩個節點。若兩個節點通過一條邊連接，則稱其爲相鄰。&lt;/p&gt;
&lt;p&gt;圖大致分兩類：地圖與查找樹。前者多爲有權圖，需要考慮邊的權重；後者多爲樹，重點在於整棵樹的拓撲結構。&lt;/p&gt;
&lt;p&gt;地圖上常見的需求是找到一棵滿足需求的通路。最廣泛使用的思路是，使用一個含有節點的集合，每次我們從集合中取出一個點，然後把所有與該節點相鄰的節點推入集合。不同的圖搜索算法區別即在於使用的集合不同。&lt;/p&gt;
&lt;p&gt;最簡單的 &lt;span class=&quot;caps&quot;&gt;BFS&lt;/span&gt; 和 &lt;span class=&quot;caps&quot;&gt;DFS&lt;/span&gt; 分別使用隊列與棧。它們僅僅用於無權圖。對有權圖則可以使用優先隊列，將從起點至該點的最低成本作爲節點的權重推入隊列，即構成了 Uniform Cost。在優先隊列的基礎上引入 Heuristic，估計每個點到重點的距離作爲權重相加，即構成了 A*。如果採用隨機隊列，則可以用於生成迷宮。&lt;/p&gt;
&lt;p&gt;樹往往不關注邊，而是將節點設計成結構體，通過指針或引用指向其它節點。&lt;/p&gt;
&lt;p&gt;最簡單的樹是沒有分叉的鏈表，每個結構體含有自己的值以及指向下一個節點的指針，調用指針即獲得下一個結構體。在此基礎上可以設計複雜的數據域，添加一個指向母節點的指針構成雙向鏈表。也可以將末位元素的指針指向初始元素構成 circular buffer。鏈表有較佳的遍歷速度，極佳的添加、刪除項目性能，但隨機訪問性能較差。&lt;/p&gt;
&lt;p&gt;對於一個鏈表，隨機訪問的平均遍歷深度普遍要達到鏈表長度的一半。爲了降低遍歷深度提高效率，我們引入二叉樹。二叉樹中每個節點有兩個指向子節點的指針。理想情況下一棵二叉樹中有儘可能多的節點兩個指針都非空，整棵樹深度最淺，平均遍歷深度可以降至 log(n/2)/2。&lt;/p&gt;
&lt;p&gt;最簡單的二叉樹的排法是，對於每個節點，左子節點的值小於該節點，右子節點的值大於該節點。根節點大致處於所有值中位數的位置，每次比較並取子節點可以快速地從剩下的值中砍掉約一半的值。堆屬於異端。&lt;/p&gt;</description>
				<pubDate>Mon, 26 May 2014 23:19:09 +1000</pubDate>
				<link>http://yukir.net2014/graph/</link>
				<guid isPermaLink="true">http://yukir.net2014/graph/</guid>
			</item>
		
			<item>
				<title>我覺得</title>
				<description>&lt;p&gt;教育部畢竟還沒出細則。還沒看到會考的卷子就討論高考是否保留英語是沒有意義的。以「英語難且沒有用途」爲由進行評價是沒有意義的。把僅僅專注外語水平考試的培訓機構拿來說事是沒有意義的。&lt;/p&gt;
&lt;p&gt;既然會考就要有會考的架勢。高中引入學分制，提供更豐富的選課。可以變通爲規定每一類型的課程要修滿多少學分，例如語言方面不修英語修法德意奧日俄乃至滿蒙回藏維吾爾波斯巴利吐火羅都行。高考拆分成普通的畢業考試和可選的大學入學考試。想去牛逼大學的修 AP 課，普通課程畢業後也可以選擇職業教育。教育部與高等院校也配合着，自招多給點權限，偏科但看着順眼的也可以酌情考慮放進來。對各個學科教師的需求增長以及淘汰不合格教師的機制自然是標配。哪怕從少數學校開始試點也可以。不然就真裏外不是人了。&lt;/p&gt;
&lt;p&gt;至於又想去好學校又嫌考試制度難度大強度高這種挑肥揀瘦的……還是拜託你拿出點菁英階級的腔勢好吧。&lt;/p&gt;
&lt;p&gt;倒不如說是我一直在後悔高中明明成績很水還硬拿自己當學霸看，沒趁高中學各種東西，也沒仔細考慮過專業問題，現在一想真是白白浪費了三年。對於我的後輩們，我希望他們能更早地選擇並學習自己喜歡的東西而不會被混蛋師長指責不務正業，哪怕爲此比現在這樣的高考還辛苦也是值得的。&lt;/p&gt;
&lt;p&gt;オレは心から愛しているたってばよ。&lt;/p&gt;</description>
				<pubDate>Mon, 19 May 2014 04:55:00 +1000</pubDate>
				<link>http://yukir.net2014/on-eng/</link>
				<guid isPermaLink="true">http://yukir.net2014/on-eng/</guid>
			</item>
		
			<item>
				<title>Jekyll</title>
				<description>&lt;p&gt;且先推上來再說。&lt;/p&gt;

&lt;p&gt;以前是我沒搞清楚 Jekyll 的原理，以爲還要先生成才能用……原來不用。&lt;/p&gt;

&lt;p&gt;比起手動切換，以前用 Hexo 寫的和貼在 &lt;a href=&quot;http://zhuanlan.zhihu.com/scalar-4&quot;&gt;scalar 4&lt;/a&gt; 的乾脆手動挑着轉換格式貼過來好了。&lt;/p&gt;
</description>
				<pubDate>Tue, 13 May 2014 04:26:58 +1000</pubDate>
				<link>http://yukir.net2014/jekyll/</link>
				<guid isPermaLink="true">http://yukir.net2014/jekyll/</guid>
			</item>
		
			<item>
				<title>牢騷</title>
				<description>&lt;p&gt;去 Google 參加 Product Design Challenge，鎩羽而歸。分組后我組的需求是「非常忙碌的人想儘快獲取新聞」，結果隊友一抹黑去研究如何篩選信息，想做一個閱讀器，然後每條消息上面放一個加號一個減號用以反饋，按下之後都會重排 TL 上其它的新聞——同主題加心，不同主題垃圾桶。可是既然是新聞哪來的喜歡不喜歡呢，你要說根據新聞的分類，像體育新聞啊政治娛樂新聞啊這樣，仔細一想誰管這個啊。再說加減號擺上去，按一下還要把所有的新聞——或者屏幕上已經顯示出來的條目保留——重新排列，誰知道這應用打算幹什麼啊。幾個人討論討論之後就往 Flipboard 的方向上跑過去了，最後的結果也只是和 Flipboard 在 UI 上有所不同——但是只有 UI 不同的話不就是 another all-in-one app 了麼。我本來還在想與其訴諸屏幕不如訴諸 Text-to-Speech，既然是非常忙碌的人哪來時間看屏幕咧，哪來時間去研究喜歡哪個不喜歡哪個呢。但是早早提出來之後對面就說「咱們沒時間再改計劃了」——然後上臺兩分鐘 Presentation 全是廢話，開玩笑還有空扯到 &lt;span class=&quot;caps&quot;&gt;NSA&lt;/span&gt; 上，要說我們這個東西的加減號是幹嘛的時候時間到了。裁判問你們這東西和 Flipboard 有什麼不同，只好說我們針對細分市場會有那麼一小撮人用我們的產品——這不就成耍流氓了麼。&lt;/p&gt;
&lt;p&gt;我經常能想到這樣的場景：一羣業餘的大學生，有那麼一兩個以前學過繪畫，有那麼一兩個家裏買了單反但也沒有研究過攝影，剩下的都是沒什麼組織能力的普通人，而且所有的人都缺乏審美與常識，湊在一起就開始做上頭拍大腿分配下來的任務，於是一羣業餘的傢伙忙忙碌碌，沒有明確的時間截點與任務分配，沒有監督機制，不到一半工夫所有的活都會壓到少數幾個有一點技術的老好人頭上，然後做出來的只是很普通很業餘的東西，發佈之後所有成員在微博中互吼，明明什麼都沒做也會說「辛苦了」，明明做的東西很一般也會說「做的很好」。現在想想去 Google 參加活動本來就興奮，萬一不小心飄飄然，就很容易進入這樣業餘的狀態。&lt;/p&gt;
&lt;p&gt;這也是我最近才認識到的一個問題：專業不只是專業知識，還包括了工程思想。如何管理進度？如何管理質量？如何發揮資源的價值？如何應對突發事件？就算大學畢業掌握了專業知識，對實際操作時遇到的問題也很難積累足夠的經驗。我父親做項目經理時，工地活動板房的屋頂曾讓颱風掀掉過，一層的傢俱電腦等設備損失慘重，於是後來哪怕是活動板房也要用鋼纜和腳手架牢牢固定。這種事在學校怎麼可能碰到呢，但是能儘快解決，而且想出應對的方法，確保以後不會發生，這種能力的重要性絲毫不下於專業知識。&lt;/p&gt;
&lt;p&gt;牢騷倒不只是針對隊友，實際上 Google 方面準備的題目也水得很。&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Small Business Loyalty Program&lt;/li&gt;
	&lt;li&gt;Personal Money Management&lt;/li&gt;
	&lt;li&gt;Increase Public Transport Utilisation&lt;/li&gt;
	&lt;li&gt;Keep up to date with the best news&lt;/li&gt;
	&lt;li&gt;Easy appointment booking&lt;/li&gt;
	&lt;li&gt;Encourage people to give more to charity&lt;/li&gt;
	&lt;li&gt;Encourage people to visit the movies&lt;/li&gt;
	&lt;li&gt;Get people to cook more at home&lt;/li&gt;
	&lt;li&gt;Give landlords peace of mind&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我們是第四個。&lt;/p&gt;
&lt;p&gt;雖然只是大學生活動的級別，但這之中有的已經有很好的產品（Toshl 之於 2，知乎日報之於 4 再說 Quora 也可以這麼搞，以及下廚房之於 8），有的幾乎是不存在的需求（7 那一組的方案是設計一個邀請朋友去看電影的 &lt;span class=&quot;caps&quot;&gt;APP&lt;/span&gt; 但交互看下來還不如微信羣裏吼一句），這個選題簡直就是把沒意思的點子甩給我們來幹。現在 Google 吸引人，似乎越來越多是靠以前打下的江山，而其本身已經不像之前那麼酷了。&lt;/p&gt;
&lt;p&gt;然後繞辦公室參觀一圈。以前覺得很誇張的辦公室，見識多了也覺得沒那麼新鮮。看着趕時髦的裝修風格論成本恐怕還不如成排的 Haworth 的椅子。再說也是租用現成的寫字樓，天花板加上暖通走線后，淨高就低得反人類。不過之前悉尼拆 Monorail 的時候 Google 去搞了個車頭擺在辦公室裏，以及電梯間也做成了車廂的模樣，不管怎麼說還挺長臉的。&lt;/p&gt;
&lt;p&gt;Google 方面倒是有暑期 Intern，爲了吸引畢業生還有 &lt;span class=&quot;caps&quot;&gt;APM&lt;/span&gt; 項目：Associate Product Manager，要求 CS 背景，爲期兩年，在 Google 的兩個項目下（對，就是 Gmail 啊 Drive 啊這個級別的項目）各幹一年。考慮到 Google 這邊的辦公室基本上拿到了整個悉尼最好的地段，哪怕是爲了積累黑 Google 的材料也值得去申請，嗯。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;上回書說道跟隊友 Brainstorm 的時候受了點小委屈，回過頭再一想，至少對我來說 Brainstorm 可能並沒有那麼重要。末將生性頑劣不喜發言，即使去和很多人一起談論也要顧忌半天，乃至哪怕我自己的點子比他們的好，也（客觀上）不容易（主觀上）不願意花心思說服他們。是的我今天試過了，只不過他們以沒時間拒絕掉了。現在一想，既然有了一個更清晰的點子，那就值得把手上說不清楚又沒有新意的東西推到一邊。如果你要向別人介紹你的東西，那麼肯定要做到幾句話就能說清楚，而不是先創造一個需求或者扭曲現有的需求——很遺憾我們就是這麼幹的。&lt;/p&gt;
&lt;p&gt;如果我一個人想的話我的點子肯定比他們想到的更好。是的我直到現在都是這麼想的。但這樣又有什麼意義呢。或者如果時間寬鬆一點，每個人先自己準備，然後各自提供方案進行比較，恐怕也是更好的形式。但後期恐怕也會變成有話表達不出來的情況。&lt;/p&gt;
&lt;p&gt;之前做大作業想做一個最好的設計但一直想不出來，老娘就在一邊催，你可以去問問同學呀，現在向來她雖然是好心，但真要去問同學反而沒用——要把問題抽出來本來就不容易，而實際上我後來去看了幾個同學的代碼，是真的沒我後來想到的方法簡潔。是的我就是這麼屌，因爲我想到了。冥思苦想砍下難題的快感，真是可以讓人興奮到脫胎換骨。但這樣一來的惡果就是，正是因爲端着架子沒有去問別人而自己想出來，那麼以後肯定會更傾向於不去問別人自己解決。&lt;/p&gt;
&lt;p&gt;然後第二個大作業又寫吐了。Heuristic 這種純粹拼智商的東西，我前前後後寫了好幾個，但至今連對不對都不知道，因爲它們打出來的結果都是相同的。然後我就又鬱悶了。&lt;/p&gt;
&lt;p&gt;那就說點輕鬆的吧。上回書說道的需求是一個很忙的人想獲取天下大事，我後來想到的一個點子是讀新聞。Google Glass 就有耳機，手機更是基本上人手一部。然後應用在後臺進行更新，更新的過程中就會根據之前積累的機主的喜好信息有的放矢。&lt;/p&gt;
&lt;p&gt;「今天是某月某日星期某，天氣如何如何。今天的新聞有：巴薩痛失歐冠……」&lt;/p&gt;
&lt;p&gt;「操，下一條。」&lt;/p&gt;
&lt;p&gt;「中共中央領導人……」&lt;/p&gt;
&lt;p&gt;「下一條。」&lt;/p&gt;
&lt;p&gt;「Retina MacBook Air 謠言四起……」&lt;/p&gt;
&lt;p&gt;「嗯？說詳細點。」&lt;/p&gt;
&lt;p&gt;「近日蘋果官網進行了更新，MacBook Air 性能升級並大幅降價……」&lt;/p&gt;
&lt;p&gt;於是我們就知道這哥們可能是巴薩球迷，然後政治新聞的權重下降，科技新聞的權重上升。&lt;/p&gt;
&lt;p&gt;爲什麼要讀出來呢？因爲如果一個人真的很忙，他哪有時間看屏幕還一條條點呢。但是手機把聲音放出來，只要聽就可以了啊。要是不想聽了直接吼一句：&lt;/p&gt;
&lt;p&gt;「儂關特！」&lt;/p&gt;
&lt;p&gt;應用就可以自己退出。&lt;/p&gt;
&lt;p&gt;有人就問了，我開車也能聽廣播和播客，這個和廣播播客有什麼區別呢？我就說，廣播雖然很方便，但畢竟是傳統的媒體；而播客則是長度更長的信息，而且也需要花很長時間甄選。我們主打短平快，後臺可以通過機器提取文章主題，一條消息幾秒鐘就可以讀完；通過機器學習分析用戶喜好；而內容也可以不僅限於新聞，例如和企業應用結合或者雙色球也都可以啊。你看這樣的東西幾句話就能描述清楚，比起山寨一個 Flipboard，至少是個值得花兩分鐘掃一眼的企劃吧。&lt;/p&gt;
&lt;p&gt;當然了提出這樣的 idea，我的自我感覺肯定比各位觀衆的感覺要好很多。再說 idea 也不值錢，以我現在的水平也做不出這麼複雜的東西（語聲識別想都不敢想了，機器學習感覺又全都是漫無止境的微調），說出來倒也無所謂。&lt;/p&gt;</description>
				<pubDate>Thu, 01 May 2014 10:34:00 +1000</pubDate>
				<link>http://yukir.net2014/pdc/</link>
				<guid isPermaLink="true">http://yukir.net2014/pdc/</guid>
			</item>
		
			<item>
				<title>具</title>
				<description>&lt;p&gt;至少需要寫版本管理這種更多面向抽象的軟件工程而非單純的成品本身的工具，就必然需要充分的使用其它版本管理工具的經驗。越是工程向而非成品向的東西越是如此，Shell，IDE，發佈，測試，實際上這些纔是 Engineering 的核心。而這些作爲學生或個人開發者則是沒那麼容易系統地接觸的知識技能。反正這個行業的主心骨也只是電腦和人體工學椅而已。&lt;/p&gt;
</description>
				<pubDate>Mon, 07 Apr 2014 22:19:54 +1000</pubDate>
				<link>http://yukir.net2014/tool/</link>
				<guid isPermaLink="true">http://yukir.net2014/tool/</guid>
			</item>
		
	</channel>
</rss>
